#!/bin/bash
# needs bgscripts >= 1.1-28
. /usr/share/bgscripts/framework.sh

type="";

case "${thisflavor}" in
   redhat|rhel|centos|fedora|korora) type=rpm;;
   debian|ubuntu) type=dpkg;;
   *) type=targz;;
esac

echo " $@ " | grep -qiE -- "help|usage|\s-h\s|\s-\?" 1>/dev/null 2>&1 && {
   # display help and exit
   less -F <<EOF
pack utility version 2017-01-24a-irfan
usage: pack [ rpm | deb | tar | scrub ] [ --debug | -d {0-10} ]
Provides a single command for building a package. This script is customized to each package.
optional arguments:
 [ rpm | deb | tar | scrub ]    Build that type of package. Scrub calls the scrub.py script.
                                The default depends on the local os flavor. This system is "${thisflavor}"
 [ --debug {0-10} | -d {0-10} ] Display package type to build and exit. Debuglev not implemented here.
EOF
exit 1
}

# Derive package name and version number, for my simple package versions only.
fullname="$( pwd | sed -e 's/.*\(SOURCES\|deb\)\///;s/\/.*//;' )"
version="$( echo "${fullname}" | grep -oiE -- "-[0-9]{0,3}\.[0-9a-zA-Z]{0,5}-[0-9]{0,4}" | sed -e 's/^-//;' )"
shortversion="$( echo "${version}" | sed -e 's/-.*//;' )"
package="$( echo "${fullname}" | sed -e "s/-${version}//;" )"

echo " $@ " | grep -qiE -- "rpm|rhel|redhat|centos|fedora|korora" 1>/dev/null 2>&1 && type=rpm
echo " $@ " | grep -qiE -- "debian|ubuntu|deb\s|dpkg" 1>/dev/null 2>&1 && type=dpkg
echo " $@ " | grep -qiE -- "tar|tgz|gz" 1>/dev/null 2>&1 && type=targz
echo " $@ " | grep -qiE -- "scrub" 1>/dev/null 2>&1 && type=scrub

# Display information
echo "packaging ${package}-${version} as ${type}"
echo " $@ " | grep -qiE -- "debug|\B-d[ 0-9]{0,3}\s" 1>/dev/null 2>&1 && exit 0

case "${type}" in
   rpm)

########## PACKAGING for rhel/centos/fedora
# if you copy-paste this, be sure to define package, version, shortversion
rpmbuilddir=~/rpmbuild/
packagespecfile="${package}-${version}/usr/share/${package}/docs/${package}.spec"
sed -n -e '1,/^\%files$/p;' "${rpmbuilddir}/SOURCES/${packagespecfile}" > "${rpmbuilddir}/SOURCES/${packagespecfile}.$$.swp" #removes files and changelog
cd "${rpmbuilddir}/SOURCES/${package}-${version}/usr/bin"; ln -sf ../share/${package}/irfan.sh irfan
cd "${rpmbuilddir}/SOURCES/${package}-${version}"
{ find * -type d -regex 'usr\/share\/irfan.*' ! -regex '.*irfan\/irfanview.*' | sed -e 's/^/%dir \//;' ; find * ! -regex '.*?.swp' ! -type d ! -regex '.*?DEBIAN.*?' | sed -e 's/^/\//;' -e 's/\(\(.*packaging\|.*README\)\.txt\)/%doc %attr(444, -, -) \1/;' -e 's/\(.*\.ini\)/%config %attr(666, -, -) \1/;' -e 's/\(.*\.sh\)/%attr(755, -, -) \1/;' -e 's/\(.*\.desktop\)/%attr(644, -, -) \1/;' ; echo "/usr/share/irfan/irfanview" ; } >> "${rpmbuilddir}/SOURCES/${packagespecfile}.$$.swp"
{ printf '\n'; sed -n -e '/^\%changelog/,$p' "${rpmbuilddir}/SOURCES/${packagespecfile}" ; } >> "${rpmbuilddir}/SOURCES/${packagespecfile}.$$.swp"
mv -f "${rpmbuilddir}/SOURCES/${packagespecfile}.$$.swp" "${rpmbuilddir}/SOURCES/${packagespecfile}"
rm -rf ${rpmbuilddir}/SOURCES/"${package}-${shortversion}"; cp -prf ${rpmbuilddir}/SOURCES/"${package}-${version}" ${rpmbuilddir}/SOURCES/"${package}-${shortversion}"
rm -rf ${rpmbuilddir}/SOURCES/"${package}-${shortversion}"/DEBIAN
cd "${rpmbuilddir}/SOURCES"
rm -rf "${package}.tgz"; tar -zc --exclude='.git' -f "${package}.tgz" "${package}-${shortversion}"
/bin/cp -pf "${rpmbuilddir}/SOURCES/${packagespecfile}" "${rpmbuilddir}/SPECS"
cd "${rpmbuilddir}/RPMS/noarch"
rpmbuild -bb "${rpmbuilddir}/SPECS/${package}.spec"
rm -rf "${rpmbuilddir}/SOURCES/${package}-${shortversion}/"

      ;;
   dpkg)

########## PACKAGING for debian
# You need package dpkg-dev to build packages
# if you copy-paste this, be sure to define package, version
debdir=~/deb
packagedebfilesdir="${package}-${version}/usr/share/${package}/docs/debian"
cd "${debdir}/${package}-${version}/usr/bin"; ln -sf ../share/${package}/irfan.sh irfan
cd "${debdir}/${package}-${version}"
find . -type f ! -regex '.*.hg.*' ! -regex '.*?debian-binary.*' ! -regex '.*?DEBIAN.*' ! -regex '.*?.swp' ! -regex '.*\.git.*' -printf '%P ' | xargs md5sum > "${debdir}/${packagedebfilesdir}/md5sums"
rm -rf "${debdir}/${package}-${version}/DEBIAN/" 2>/dev/null; mkdir -p "${debdir}/${package}-${version}/DEBIAN/"
cp -pf "${debdir}/${packagedebfilesdir}"/* "${debdir}/${package}-${version}/DEBIAN/"
cd ~/deb
mv "${debdir}/${package}-${version}/.git" "${debdir}/.git$$"
fakeroot dpkg-deb -b "${debdir}/${package}-${version}"
mv "${debdir}/.git$$" "${debdir}/${package}-${version}/.git"

      ;;
   targz)

### PACKAGING in a master.tgz
# if you copy-paste this, be sure to define package, version
cd ~/deb 2>/dev/null || cd ~/rpmbuild/SOURCES
rm -rf ./"${package}-${version}".master.tgz
tar -zcf ./"${package}-${version}".master.tgz "${package}-${version}"/

      ;;
   scrub)

########## SCRUB for publication
# if you copy-paste this, be sure to define package, version
cd ~/deb 2>/dev/null || cd ~/rpmbuild/SOURCES
cd "$( find . -name "*scrub.txt" | grep -iE "${package}-${version}\/" | xargs dirname )"
/usr/share/bgscripts/scrub.py

      ;;
   unknown)
      echo "error: check $0 for errors on type ${type}." 1>&2
      ;;
esac
